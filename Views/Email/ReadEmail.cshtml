@model MimeKit.MimeMessage
@{
    ViewData["Title"] = "Email Details";
    Layout = "_Layout";

    // ----- Helper Functions (Tương tự Inbox, để hiển thị From đẹp hơn) -----
    Func<MimeKit.InternetAddressList, string> FormatAddressList = (list) =>
    {
        if (list == null || !list.Any()) return string.Empty;
        return string.Join(", ", list.Mailboxes.Select(mb => !string.IsNullOrEmpty(mb.Name) ? $"{mb.Name} <{mb.Address}>" : mb.Address));
    };

    Func<MimeKit.InternetAddressList, string> GetFirstSenderAddress = (list) =>
    {
        if (list == null || !list.Any()) return string.Empty;
        return list.Mailboxes.FirstOrDefault()?.Address ?? string.Empty;
    };

    Func<DateTimeOffset, string> FormatFullDateTime = (date) =>
    {
        // Ví dụ định dạng đầy đủ hơn: Thứ 5, 23 tháng 5 năm 2024 10:30:15
        return date.LocalDateTime.ToString("dddd, dd MMMM yyyy HH:mm:ss", new System.Globalization.CultureInfo("vi-VN"));
    };
    // ----- End Helper Functions -----
}
@* Link đến file CSS mới *@
<link href="~/css/ReadEmail.css" rel="stylesheet" />

<div class="read-email-container">
    <h2>@ViewData["Title"]</h2>

    <!-- Hiển thị thông tin email header -->
    <div class="email-header-section">
        <div class="email-header-item">
            <strong>From:</strong> @FormatAddressList(Model.From)
        </div>
        @if (Model.To != null && Model.To.Any())
        {
            <div class="email-header-item">
                <strong>To:</strong> @FormatAddressList(Model.To)
            </div>
        }
        @if (Model.Cc != null && Model.Cc.Any())
        {
            <div class="email-header-item">
                <strong>Cc:</strong> @FormatAddressList(Model.Cc)
            </div>
        }
        <div class="email-header-item">
            <strong>Date:</strong> @FormatFullDateTime(Model.Date)
        </div>
        <div class="email-header-item">
            <strong>Subject:</strong> @Model.Subject
        </div>
    </div>

    <!-- Hiển thị nội dung email -->
    <div class="email-body">
        @if (!string.IsNullOrEmpty(Model.HtmlBody))
        {
            @Html.Raw(Model.HtmlBody) @* Hiển thị HTML an toàn *@
        }
        else if (!string.IsNullOrEmpty(Model.TextBody))
        {
            <pre style="white-space: pre-wrap; word-wrap: break-word; font-family: inherit;">@Model.TextBody</pre> @* Hiển thị TextBody, giữ nguyên xuống dòng và khoảng trắng *@
        }
        else
        {
            <p><i>[This email has no content]</i></p>
        }
    </div>

    <!-- Các nút hành động -->
    <div class="email-actions">
        @* Nút Back to Inbox *@
        <a href="@Url.Action("Inbox", "Email")" class="btn-action">
            Back to Inbox
        </a>

        @* Nút Reply *@
        <a href="@Url.Action("Compose", "Email", new {
                    replyTo = GetFirstSenderAddress(Model.From),
                    subject = (Model.Subject?.StartsWith("Re:", StringComparison.OrdinalIgnoreCase) ?? false ? Model.Subject : "Re: " + Model.Subject)
                 })"
           class="btn-action">
            Reply
        </a>

        @* Bạn có thể thêm nút Reply All hoặc Forward ở đây nếu muốn *@
    </div>
</div>